version: "3.8"

networks:
  net1:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
services:
    dns:
        container_name: bind
        image: resystit/bind9:latest
        ports: 
            - 53:53/tcp
            - 53:53/udp
            - 127.0.0.1:953:953/tcp
        volumes:
            - type: bind
              source: ./dns/db.codydomain.undernet.cs.odu.edu
              target: /etc/bind/db.codydomain.undernet.cs.odu.edu
            - type: bind
              source: ./dns/named.conf
              target: /etc/bind/named.conf
       # networks:
       #     net1:
       #         ipv4_address: 172.17.0.2
        #stdin_open: true
        #tty: true
    webserver-1:
        #networks: 
        #    net1:
        #        ipv4_address: 172.20.0.10
        container_name: site1
        image: nginx:latest
        restart: always
        volumes: 
            - ./site1/index.html:/usr/share/nginx/html/index.html
    webserver-2:
        #networks: 
        #    net1:
        #        ipv4_address: 172.20.0.11
        container_name: site2
        image: nginx:latest
        restart: always
        volumes: 
            - ./site2/index.html:/usr/share/nginx/html/index.html
    reverse-proxy:
        container_name: rp
        image: nginx:latest
        ports:
            - 80:80
            - 443:443
        #restart: always
        depends_on: #we want reverse proxy to come up after the webservers
            - webserver-1
            - webserver-2
            - webserver-3
        volumes:
            - ./rp/rp.conf:/etc/nginx/conf.d/default.conf
            - ./cert/:/etc/ssl/codydomain/
    webserver-3:
        container_name: site3
       # image: site3:latest
        image: git.cs.odu.edu:5050/clittman/con1/site3:latest
        links:
            - "db:database"
   #      enviroment:
   #         - DATABASE_PUBLIC_URL=db        
    db:
        container_name: db
        image: mysql:latest
        restart: always
        environment:
            MYSQL_USER: mysql
            MYSQL_PASSWORD: mysql
            MYSQL_ROOT_PASSWORD: root
            #MYSQL_ALLOW_EMPTY_PASSWORD: yes
           # MYSQL_DATABASE: website
        volumes: 
            - ./db:/docker-entrypoint-initdb.d
            - .db-data:/var/lib/mysql 

volumes:
    dbdata:

            