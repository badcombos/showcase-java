/*
* gradle build based on https://github.com/cstkennedy/cs330-examples/blob/master/Review-09-Java-Shapes/Example-3/build.gradle
*/

buildscript {
    repositories {
        mavenCentral()
    }
}

plugins {
    id "java"
    id "application"
    id "eclipse"

    id "com.github.spotbugs" version "4.6.2"
    id "project-report"
    id "jacoco"
    id "pmd"

    // id "org.ysb33r.doxygen" version "0.5"
}

// task myJavadocs(type: Javadoc) {
//   source = sourceSets.main.allJava
// }

sourceCompatibility = 1.11
targetCompatibility = 1.11

repositories {
    mavenCentral()
}

dependencies {
    testImplementation "junit:junit:4.13.2"
    testImplementation "org.hamcrest:hamcrest-library:1.3"

    implementation 'com.google.guava:guava:30.1.1-jre'
}

jar {
    archiveBaseName = "nameExtraction"

    manifest {
        attributes(
            "Main-Class": "edu.odu.cs.cs350.nameExtraction.Driver"
        )
    }
}

run {
    main = "edu.odu.cs.cs350.nameExtraction.Driver"
}

application {
    mainClass = "edu.odu.cs.cs350.nameExtraction.Driver"
}

test {
    reports {
        html.enabled = true
    }
}

javadoc {
    failOnError false
}

//------------------------------------------------------------------------------
// Analysis Tools
//------------------------------------------------------------------------------

// SpotBugs
spotbugsMain {
    ignoreFailures = true
    effort = "max"
    reportLevel = "medium"
    reports {
       xml.enabled = false
       html.enabled = true
    }
}

spotbugsTest.enabled = false
// End SpotBugs config

jacoco {
    toolVersion = "0.8.5"
}

jacocoTestReport {
    reports {
        html.enabled true
        xml.enabled true
        csv.enabled true
    }
}

pmd {
    ignoreFailures = true
    ruleSets = [
        "category/java/bestpractices.xml",
        "category/java/codestyle.xml",
        "category/java/design.xml",
        "category/java/errorprone.xml",
        "category/java/performance.xml"
    ]
}